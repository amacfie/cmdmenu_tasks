[
  {
    "name": "nix [menu]",
    "subtasks": [
      {
        "name": "Delete old NixOS generations",
        "cmdText": "sudo nix-collect-garbage -d",
        "numParams": 0,
        "keywords": "clear free remove"
      },
      {
        "name": "Upgrade nix packages (don't change channel)",
        "cmdText": "sudo nix-channel --update && sudo nixos-rebuild switch",
        "numParams": 0,
        "keywords": "update"
      }
    ]
  },
  {
    "name": "ffmpeg [menu]",
    "subtasks": [
      {
        "name": "Crop video",
        "cmdText": "ffmpeg -i <in_file> -filter:v \"crop=<out_w>:<out_h>:<start_x>:<start_y>\" <out_file>",
        "keywords": "trim",
        "numParams": 6
      },
      {
        "name": "Merge video file and audio file",
        "cmdText": "ffmpeg -i <video_file> -i <audio_file> -c:v copy -c:a aac <output_file>",
        "keywords": "combine",
        "numParams": 3
      },
      {
        "name": "Reverse video file",
        "cmdText": "ffmpeg -i <in_file> -vf reverse -af areverse <out_file>",
        "keywords": "backwards convert",
        "numParams": 2
      },
      {
        "name": "Remove audio from video",
        "cmdText": "ffmpeg -i <in_file> -c copy -an <out_file>",
        "keywords": "strip mute track",
        "numParams": 2
      },
      {
        "name": "Get frames per second of video file",
        "cmdText": "ffmpeg -i <filename>",
        "keywords": "fps view see",
        "numParams": 1
      },
      {
        "name": "Convert video to mp3",
        "cmdText": "ffmpeg -i <video_file> -q:a 0 -map a out.mp3",
        "keywords": "audio strip track",
        "numParams": 1
      },
      {
        "name": "Hardcode subtitles",
        "cmdText": "ffmpeg -i <video_file> -vf \"subtitles=<subtitle_file>\" <out_file>",
        "keywords": "video subs file srt",
        "numParams": 3
      },
      {
        "name": "Make video from image and audio",
        "cmdText": "ffmpeg -loop 1 -r 1 -i <image_file> -i <audio_file> -c:a copy -shortest output.avi",
        "keywords": "youtube loop mp3 create",
        "numParams": 2
      },
      {
        "name": "Cut video",
        "cmdText": "ffmpeg -i <in_file> -ss <start (hh:mm:ss)> -to <end (hh:mm:ss)> -c copy <out_file>",
        "keywords": "crop segment interval",
        "numParams": 4
      },
      {
        "name": "Concatenate video files",
        "cmdText": "ffmpeg -i <file1> -i <file2> -i <file3> -filter_complex \"[0:v] [0:a] [1:v] [1:a] [2:v] [2:a] concat=n=3:v=1:a=1 [v] [a]\" -map \"[v]\" -map \"[a]\" <out_file>",
        "keywords": "join merge mp4 mkv avi movie",
        "numParams": 4
      }
    ]
  },
  {
    "name": "Start perl REPL",
    "cmdText": "rlwrap perl -d -e 1",
    "keywords": "interactive run",
    "numParams": 0
  },
  {
    "name": "Get name of running terminal",
    "cmdText": "ps -o 'cmd=' -p $(ps -o 'ppid=' -p $$)",
    "keywords": "see info show view emulator",
    "numParams": 0
  },
  {
    "name": "Stop all docker containers",
    "cmdText": "sudo docker stop $(sudo docker ps -q)",
    "keywords": "kill terminate",
    "numParams": 0
  },
  {
    "name": "Run vim with default configuration",
    "cmdText": "vim --clean",
    "keywords": "file blank empty nvim neovim",
    "numParams": 0
  },
  {
    "name": "Get exit status of last command",
    "cmdText": "echo $?",
    "keywords": "see info show recent code success fail",
    "numParams": 0
  },
  {
    "name": "Show 10 processes using the most memory",
    "cmdText": "ps aux --sort=-%mem | head -11",
    "keywords": "info see display get print echo hog sort ram",
    "numParams": 0
  },
  {
    "name": "Get window's process ID by clicking it",
    "cmdText": "xprop _NET_WM_PID | cut -d' ' -f3",
    "keywords": "see find pid kill x select mouse",
    "numParams": 0
  },
  {
    "name": "Set vi keybindings (in bash)",
    "cmdText": "set -o vi",
    "keywords": "vim keys shortcut configure",
    "numParams": 0
  },
  {
    "name": "Show default gateway",
    "cmdText": "ip route | grep default",
    "keywords": "router lan local network",
    "numParams": 0
  },
  {
    "name": "Echo range of lines from file",
    "cmdText": "sed -n <start_line>,<end_line>p <file>",
    "keywords": "write echo line single individual one set part print interval",
    "numParams": 3
  },
  {
    "name": "Forward port via ssh",
    "cmdText": "ssh -L <local_port>:<dest_host>:<dest_port> <ssh_server>",
    "keywords": "proxy",
    "numParams": 4
  },
  {
    "name": "Show lines appended to a file in real time",
    "cmdText": "tail -F <file>",
    "keywords": "tail watch live update log",
    "numParams": 1
  },
  {
    "name": "Search in files with a certain extension",
    "cmdText": "ag -G '\\.<extension>$' '<search_string>'",
    "keywords": "grep",
    "numParams": 2
  },
  {
    "name": "Zip directory",
    "cmdText": "zip -r <zip_file> <dir>",
    "numParams": 2
  },
  {
    "name": "Count words in file",
    "cmdText": "wc -w <file>",
    "numParams": 1
  },
  {
    "name": "Convert audio format",
    "cmdText": "avconv -i <in_file> <out_file>",
    "keywords": "sound file format webm mp3",
    "numParams": 2
  },
  {
    "name": "Convert image format",
    "cmdText": "convert <in_file> <out_file>",
    "keywords": "png jpg jpeg gif file",
    "numParams": 2
  },
  {
    "name": "Kill LibreOffice",
    "cmdText": "killall soffice.bin",
    "keywords": "end terminate process",
    "numParams": 0
  },
  {
    "name": "See version of installed pip package",
    "cmdText": "pip show <package>",
    "keywords": "python pip3 view get",
    "numParams": 1
  },
  {
    "name": "Count lines of code in project",
    "cmdText": "find . -name '*.<code_file_extension>' | xargs wc -l",
    "keywords": "total all entire folder directory recursive",
    "numParams": 1
  },
  {
    "name": "Pretty print JSON",
    "cmdText": "cat <json file> | python -m json.tool",
    "numParams": 1
  },
  {
    "name": "Count files [menu]",
    "subtasks": [
      {
        "name": "Count all files in a folder recursively",
        "cmdText": "find <folder> -type f -printf \"\\n\" | wc -l",
        "keywords": "depth",
        "numParams": 1
      },
      {
        "name": "Count all files in a folder, non-recursively",
        "cmdText": "find <folder> -maxdepth 1 -type f -printf \"\\n\" | wc -l",
        "keywords": "depth",
        "numParams": 1
      }
    ]
  },
  {
    "name": "apt [menu]",
    "subtasks": [
      {
        "name": "Show version of installed apt package",
        "cmdText": "apt list <pkg_name>",
        "keywords": "see display get info print echo current",
        "numParams": 1
      },
      {
        "name": "See apt package version before installing",
        "cmdText": "apt-cache policy <pkg>",
        "keywords": "number check view",
        "numParams": 1
      },
      {
        "name": "Install dependencies after running dpkg -i",
        "cmdText": "sudo apt-get install -f",
        "keywords": "deb",
        "numParams": 0
      }
    ]
  },
  {
    "name": "dpkg [menu]",
    "subtasks": [
      {
        "name": "Test if a package is installed",
        "cmdText": "dpkg -l | grep <package_name>",
        "keywords": "query exists present",
        "numParams": 1
      },
      {
        "name": "Show where a package was installed to",
        "cmdText": "dpkg -L <package>",
        "keywords": "files locations",
        "numParams": 1
      },
      {
        "name": "Find the package that installed a file",
        "cmdText": "dpkg -S <filename_pattern>",
        "keywords": "search",
        "numParams": 1
      },
      {
        "name": "Uninstall .deb package",
        "cmdText": "sudo dpkg -r <package>",
        "keywords": "remove file",
        "numParams": 1
      },
      {
        "name": "Install .deb file",
        "cmdText": "sudo dpkg -i <file>.deb",
        "numParams": 1
      }
    ]
  },
  {
    "name": "Python virtual environments [menu]",
    "subtasks": [
      {
        "name": "Deactivate python virtual environment",
        "cmdText": "deactivate",
        "keywords": "unload end exit virtualenv",
        "numParams": 0
      },
      {
        "name": "Activate python virtual environment",
        "cmdText": "source <venv_dir>/bin/activate",
        "keywords": "load work on workon enter virtualenv",
        "numParams": 1
      },
      {
        "name": "Create python virtual environment",
        "cmdText": "<python> -m venv <venv_dir>",
        "keywords": "virtualenv mkvirtualenv",
        "numParams": 2
      }
    ]
  },
  {
    "name": "Networking [menu]",
    "subtasks": [
      {
        "name": "Get public IP address",
        "cmdText": "curl -s ipinfo.io/ip",
        "keywords": "see display",
        "numParams": 0
      },
      {
        "name": "Get main local IP address",
        "cmdText": "ip route get 8.8.8.8 | head -1 | cut -d' ' -f7",
        "keywords": "see display private ip",
        "numParams": 0
      },
      {
        "name": "Ping finitely many times",
        "cmdText": "ping -c <count> <destination>",
        "keywords": "certain given",
        "numParams": 2
      },
      {
        "name": "Scan range of IP addresses for alive hosts and services",
        "cmdText": "nmap <ip_range>",
        "keywords": "network net nmap",
        "numParams": 1
      },
      {
        "name": "Port scan",
        "cmdText": "nmap <host>",
        "keywords": "network net nmap",
        "numParams": 1
      },
      {
        "name": "Show network interfaces",
        "cmdText": "ip link",
        "keywords": "network net display get list",
        "numParams": 0
      },
      {
        "name": "Clear wondershaper bandwidth limit on network interface",
        "cmdText": "sudo wondershaper clear <interface>",
        "keywords": "throttle",
        "numParams": 1
      },
      {
        "name": "Put bandwidth limit on network interface",
        "cmdText": "sudo wondershaper <interface> <down_in_kbps> <up_in_kbps>",
        "keywords": "throttle traffic shaper data",
        "numParams": 3
      }
    ]
  },
  {
    "name": "Get file encoding",
    "cmdText": "file -i <file>",
    "keywords": "view see display",
    "numParams": 1
  },
  {
    "name": "Serve Jekyll site including drafts",
    "cmdText": "jekyll serve --drafts --watch",
    "keywords": "blog web hot reload live",
    "numParams": 0
  },
  {
    "name": "Go to Android device storage directory",
    "cmdText": "cd /run/user/1000/gvfs",
    "keywords": "usb phone mount folder location path dir",
    "numParams": 0
  },
  {
    "name": "Unpack compressed file",
    "cmdText": "unp <file>",
    "keywords": "archive archived unzip zip tar gzip",
    "numParams": 1
  },
  {
    "name": "Merge folders",
    "cmdText": "rsync -avh --progress <src_dir> <dest_dir>",
    "numParams": 2
  },
  {
    "name": "Copy file and see progress",
    "cmdText": "rsync --info=progress2 <src_file> <dest_file>",
    "keywords": "rsync speed",
    "numParams": 2
  },
  {
    "name": "Make folder and any nonexisting parents",
    "cmdText": "mkdir -p <folder>",
    "keywords": "recursive create directory all containing dir",
    "numParams": 1
  },
  {
    "name": "Show folder size",
    "cmdText": "du -sh <folder>",
    "keywords": "see display get directory dir",
    "numParams": 1
  },
  {
    "name": "Show file size",
    "cmdText": "ls -lh <file>",
    "keywords": "see display get",
    "numParams": 1
  },
  {
    "name": "Add event to Google Calendar",
    "cmdText": "gcalcli add",
    "keywords": "gcal gcalcli gcq",
    "numParams": -1
  },
  {
    "name": "Remove first line from file",
    "cmdText": "sed -i '1d' <file>",
    "keywords": "sed strip delete tail",
    "numParams": 1
  },
  {
    "name": "See free storage space",
    "cmdText": "df -h --total",
    "keywords": "view get hdd hard drive gb available used",
    "numParams": 0
  },
  {
    "name": "Strip special characters from a filename",
    "cmdText": "rename 's/[^a-zA-Z0-9_.]/_/g' <file>",
    "keywords": "remove ascii replace",
    "numParams": 1
  },
  {
    "name": "Extract range of pages from PDF",
    "cmdText": "pdftk in.pdf cat <start_page>-<end_page> output out.pdf",
    "keywords": "cut splice split",
    "numParams": 2
  },
  {
    "name": "Convert image to grayscale",
    "cmdText": "convert <source_file> -colorspace Gray <dest_file>",
    "numParams": 2
  },
  {
    "name": "Edit my crontab",
    "keywords": "personal",
    "cmdText": "crontab -e",
    "numParams": 0
  },
  {
    "name": "See TeX version, including distribution",
    "keywords": "get show latex",
    "cmdText": "tex --version",
    "numParams": 0
  },
  {
    "name": "See what shell I'm using",
    "keywords": "get show current name running",
    "cmdText": "echo $SHELL",
    "numParams": 0
  },
  {
    "name": "Get Ubuntu distribution version",
    "keywords": "see show display",
    "cmdText": "lsb_release -a",
    "numParams": 0
  },
  {
    "name": "Get Linux kernel version",
    "keywords": "see show display",
    "cmdText": "uname -r",
    "numParams": 0
  },
  {
    "name": "End process",
    "cmdText": "killall -9 <proc_name>",
    "keywords": "kill terminate",
    "numParams": 1
  },
  {
    "name": "Copy ssh public key to server",
    "cmdText": "ssh-copy-id <user>@<host>",
    "numParams": 2
  },
  {
    "name": "Find file by name across filesystem",
    "cmdText": "locate -q <pattern>",
    "keywords": "search locate",
    "numParams": 1
  },
  {
    "name": "Cancel all of my print jobs",
    "cmdText": "lprm -",
    "keywords": "printer kill terminate",
    "numParams": 0
  },
  {
    "name": "Create symbolic link",
    "cmdText": "ln -sf <src_absolute_path> <link_absolute_path>",
    "keywords": "make new update change add symlink",
    "numParams": 2
  },
  {
    "name": "See target of symbolic link",
    "cmdText": "readlink -f <link>",
    "keywords": "get show symlink",
    "numParams": 1
  },
  {
    "name": "Exit shell but leave subprocesses running",
    "cmdText": "disown -a && exit",
    "keywords": "keep background close preserve",
    "numParams": 0
  },
  {
    "name": "Mount temporary RAM partition",
    "cmdText": "mount -t tmpfs tmpfs /mnt -o size=<num_mb>m",
    "keywords": "storage memory",
    "numParams": 1
  },
  {
    "name": "See total, used, and available RAM",
    "cmdText": "free -m",
    "keywords": "get show memory free",
    "numParams": 0
  },
  {
    "name": "Launch HTTP file server here",
    "cmdText": "python3 -m http.server --bind 127.0.0.1 8000",
    "keywords": "web start serve static listen",
    "numParams": 0
  },
  {
    "name": "Get BTC price",
    "cmdText": "echo \"$(curl -s https://api.coindesk.com/v1/bpi/currentprice/usd.json | grep -o 'rate\":\"[^\"]*' | cut -d\\\" -f3)\"",
    "keywords": "bitcoin bitcoins usd conversion rate",
    "numParams": 0
  },
  {
    "name": "Quick weather",
    "cmdText": "curl wttr.in",
    "keywords": "forecast",
    "numParams": 0
  },
  {
    "name": "Get current username",
    "cmdText": "echo \"$USER\"",
    "keywords": "see show",
    "numParams": 0
  },
  {
    "name": "Get number of CPU cores",
    "cmdText": "python -c 'import psutil; print(psutil.cpu_count(logical=False))'",
    "keywords": "see show physical",
    "numParams": 0
  }
]

